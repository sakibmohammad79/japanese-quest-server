// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  name         String
  email        String       @unique
  password     String
  photoUrl     String?
  status       UserStatus   @default(ACTIVE)
  role         Role         @default(USER)
  isDeleted  Boolean @default(false)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  lessons      Lesson[] 
  vocabularies Vocabulary[] 
  tutorials    Tutorial[]
}

model Lesson {
  id            String        @id @default(uuid())
  name          String
  description   String?
  content       String
  imageUrl      String?
  lessonNumber  Int
  isPublish     Boolean @default(false)
  createdById   String
  createdBy     User @relation(fields: [createdById], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  //relation
  vocabularies  Vocabulary[]
  @@unique([createdById, lessonNumber]) // Ensures unique lesson numbers per user
}

model Vocabulary {
  id             String      @id @default(uuid())
  word           String
  pronunciation  String
  meaning        String
  whenToSay      String
  lessonId       String
  lesson         Lesson      @relation(fields: [lessonId], references: [id])
  adminId        String
  admin          User        @relation(fields: [adminId], references: [id])
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Tutorial {
  id             String      @id @default(uuid())
  videoUrl       String
  title          String
  description    String?
  createdById    String
  createdBy      User        @relation(fields: [createdById], references: [id])
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

enum Role {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}